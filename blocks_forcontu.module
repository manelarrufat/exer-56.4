<?php
/**
* @file
* Módulo Blocks Forcontu
* Este módulo nos permitirá definir bloques
*/

/**
 * Implements hook_block_info().
 */
function blocks_forcontu_block_info() {
  // Unpublished nodes
  $blocks['unpublished_nodes'] = array(
    'info' => t('Unpublished nodes'),
    'cache' => DRUPAL_NO_CACHE,
  );

  //Users list
  $blocks['users_list'] = array(
    'info' => t('Users list'),
    'cache' => DRUPAL_NO_CACHE,
  );

  //Obtenemos el nombre del tema activo
  $default_theme = variable_get('theme_default', 'bartik');
  //obtenemos listado de las regiones del tema
  $regions = system_region_list($default_theme, REGIONS_VISIBLE);
  //Si no tiene la región "sicebar_second" activamos el bloque en la región por defecto
  if ($regions['sidebar_second']) {
    $region = 'sidebar_second';
  } else {
    $region = system_default_region($default_theme);
  }
  //Published nodes
  $blocks['published_nodes'] = array(
    'info' => t('Published nodes'),
    'cache' => DRUPAL_NO_CACHE,
    'status' => 1,
    'region' => $region,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>',
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function blocks_forcontu_block_configure($delta = '') {
$form = array();
  switch ($delta) {
    case 'unpublished_nodes':
      $form['num_nodes'] = array(
        '#type' => 'select',
        '#title' => t('Select the number of nodes to display in this block.'),
        '#default_value' => variable_get('blocks_forcontu_num_nodes', 3),
        '#options' => array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5),
      );
      break;
    case 'users_list':
      $form['num_users'] = array(
        '#type' => 'select',
        '#title' => t('Select the numbers of users to display in this block.'),
        '#default_value' => variable_get('blocks_forcontu_num_users', 3),
        '#options' => array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5),
      );
      $form['active_users'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display only active users.'),
        '#default_value' => variable_get('blocks_forcontu_active_users', 0),
      );
      break;
    case 'published_nodes':
      $form['num_nodes_published'] = array(
        '#type' => 'select',
        '#title' => t('Select the number of nodes to display in this block.'),
        '#default_value' => variable_get('blocks_forcontu_num_nodes_published', 3),
        '#options' => array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5),
      );
      $form['node_types_published'] = array(
        '#type' => 'select',
        '#title' => t('Select a content type.'),
        '#default_value' => variable_get('blocks_forcontu_node_types_published', 'article'),
        '#options' => node_type_get_names(), //Cargamos los nombres de los tipos de nodo
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function blocks_forcontu_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'unpublished_nodes':
      variable_set('blocks_forcontu_num_nodes', $edit['num_nodes']);
      break;
    case 'users_list':
      variable_set('blocks_forcontu_num_users', $edit['num_users']);
      variable_set('blocks_forcontu_active_users', $edit['active_users']);
      break;
    case 'published_nodes':
      variable_set('blocks_forcontu_num_nodes_published', $edit['num_nodes_published']);
      variable_set('blocks_forcontu_node_types_published',$edit['node_types_published']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function blocks_forcontu_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'unpublished_nodes':
      $result = db_select('node', 'n')
        ->fields('n', array('nid', 'title', 'created'))
        ->condition('status', 0)
        ->orderBy('created', 'DESC')
        ->range(0, variable_get('blocks_forcontu_num_nodes', 3))
        ->execute();
      if ($node_title_list = node_title_list($result)) {
        $block['subject'] = t('Unpublished nodes');
        $block['content'] = theme('blocks_forcontu_list', array('list' => $node_title_list));
      }
      break;

    case 'users_list':
      $query = db_select('users', 'u')
        ->fields('u', array('uid', 'name' , 'created'))
        ->orderBy('created', 'DESC')
        ->range(0, variable_get('blocks_forcontu_num_users', 3));
      //Comprobamos si sólo hay que mostrar usuarios activos
      if (variable_get('blocks_forcontu_active_users', 3) == 1) {
        $query->condition('status', 1);
      }
      $result = $query->execute();
      $variables['users'] = $result->fetchAll();
      $variables['title'] = NULL;
      $block['subject'] = t('Users list');
      $block['content'] = theme_user_list($variables);
      break;

    case 'published_nodes':
      $result = db_select('node', 'n')
        ->fields('n', array('nid', 'title', 'created'))
        ->condition('status', 1)
        ->condition('type', variable_get('blocks_forcontu_node_types_published', 'article'))
        ->orderBy('created', 'DESC')
        ->range(0, variable_get('blocks_forcontu_num_nodes_published', 3))
        ->execute();
      if ($node_title_list = node_title_list($result)) {
        $block['subject'] = t('Published nodes');
        $block['content'] = $node_title_list;
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function blocks_forcontu_theme() {
  return array(
    'blocks_forcontu_list' => array(
      'template' => 'blocks-forcontu-list',
      'variables' => array('title' => NULL, 'nid' => NULL),
    ),
  );
}

/**
 * Implements hook_init().
 */
function blocks_forcontu_init() {

  drupal_add_css(drupal_get_path('module', 'blocks_forcontu') . '/blocks_forcontu.css');
   
}